{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Los 40 alumnos de una clase han obtenido las siguientes puntuaciones, sobre 50, en un examen de Física."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "califfisica=[48, 47, 44, 42, 41, 39, 39, 38, 38, 38, 37, 36, 36, 35, 35, 34, 34, 34, 33,\n",
    "32, 32, 31, 29, 28, 28, 27, 26, 25, 24, 23, 22, 20, 17, 15, 15, 13, 13, 11, 7, 3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "Materia = \"Fisica\"\n",
    "Notas = [48] + [47] + [44] + [41] + [39]*2 + [38]*3 + [37] + [36]*2 + [35]*2 + [34]*3 + [33] + [32]*2 + [31] + [29] + [28]*2 + [27] + [26] + [25] + [24] + [23] + [22] + [20] + [17] + [15]*2 + [13]*2 + [11] + [7] +[3] \n",
    "tab = pd.DataFrame({\"Materia\":\"Fisica\", \"Puntuaciones\":Notas})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Materia</th>\n",
       "      <th>Puntuaciones</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Fisica</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Materia  Puntuaciones\n",
       "0   Fisica            48\n",
       "1   Fisica            47\n",
       "2   Fisica            44\n",
       "3   Fisica            41\n",
       "4   Fisica            39\n",
       "5   Fisica            39\n",
       "6   Fisica            38\n",
       "7   Fisica            38\n",
       "8   Fisica            38\n",
       "9   Fisica            37\n",
       "10  Fisica            36\n",
       "11  Fisica            36\n",
       "12  Fisica            35\n",
       "13  Fisica            35\n",
       "14  Fisica            34\n",
       "15  Fisica            34\n",
       "16  Fisica            34\n",
       "17  Fisica            33\n",
       "18  Fisica            32\n",
       "19  Fisica            32\n",
       "20  Fisica            31\n",
       "21  Fisica            29\n",
       "22  Fisica            28\n",
       "23  Fisica            28\n",
       "24  Fisica            27\n",
       "25  Fisica            26\n",
       "26  Fisica            25\n",
       "27  Fisica            24\n",
       "28  Fisica            23\n",
       "29  Fisica            22\n",
       "30  Fisica            20\n",
       "31  Fisica            17\n",
       "32  Fisica            15\n",
       "33  Fisica            15\n",
       "34  Fisica            13\n",
       "35  Fisica            13\n",
       "36  Fisica            11\n",
       "37  Fisica             7\n",
       "38  Fisica             3"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "califfisica=[48, 47, 44, 42, 41, 39, 39, 38, 38, 38, 37, 36, 36, 35, 35, 34, 34, 34, 33,\n",
    "32, 32, 31, 29, 28, 28, 27, 26, 25, 24, 23, 22, 20, 17, 15, 15, 13, 13, 11, 7, 3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Medidas de tendencia central \n",
      "Puntuaciones    28.897436\n",
      "dtype: float64\n",
      "Puntuaciones    32.0\n",
      "dtype: float64\n",
      "  Materia  Puntuaciones\n",
      "0  Fisica            34\n",
      "1     NaN            38\n",
      "----------------------------------------------------------------------------- \n",
      "\n",
      "Medidas de dispersión\n",
      "Puntuaciones    120.989204\n",
      "dtype: float64\n",
      "Puntuaciones    10.999509\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "#1.Calcular las medidas de tendencia central y de dispersión\n",
    "print(\"Medidas de tendencia central \")\n",
    "mean = tab.mean()\n",
    "print(mean)\n",
    "median = tab.median()\n",
    "print(median)\n",
    "mode = tab.mode()\n",
    "print(mode)\n",
    "\n",
    "print(\"----------------------------------------------------------------------------- \\n\")\n",
    "\n",
    "print(\"Medidas de dispersión\")\n",
    "Var = tab.var()\n",
    "print(Var)\n",
    "Std = tab.std()\n",
    "print(Std)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib import pyplot\n",
    "from numpy.random import normal\n",
    "from numpy import hstack\n",
    "from statsmodels.distributions.empirical_distribution import ECDF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Ajustamos la curva de distribución empírica\n",
    "dist_emp = ECDF(califfisica)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cuantil 0.25 : 22.750\n",
      "Cuantil 0.75 : 37.250\n"
     ]
    }
   ],
   "source": [
    "#Cuantiles que queremos\n",
    "print('Cuantil 0.25 : %.3f' % np.quantile(califfisica, 0.25))\n",
    "print('Cuantil 0.75 : %.3f' % np.quantile(califfisica, 0.75))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cuantil 0.1 : 13.000\n",
      "Cuantil 0.9 : 41.100\n"
     ]
    }
   ],
   "source": [
    "#Deciles que queremos\n",
    "print('Cuantil 0.1 : %.3f' % np.quantile(califfisica, 0.1))\n",
    "print('Cuantil 0.9 : %.3f' % np.quantile(califfisica, 0.9))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1983ef40f40>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Gráfico de caja y brazos\n",
    "tab.boxplot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Gráfico de distribución empírica\n",
    "pyplot.plot(dist_emp.x, dist_emp.y)\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#2.¿Los datos tienen una distribución platicurtica?\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
